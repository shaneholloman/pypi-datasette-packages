{
  "info": {
    "author": "Datasette",
    "author_email": null,
    "bugtrack_url": null,
    "classifiers": [
      "Framework :: Datasette",
      "License :: OSI Approved :: Apache Software License"
    ],
    "description": "# datasette-embeddings\n\n[![PyPI](https://img.shields.io/pypi/v/datasette-embeddings.svg)](https://pypi.org/project/datasette-embeddings/)\n[![Changelog](https://img.shields.io/github/v/release/datasette/datasette-embeddings?include_prereleases&label=changelog)](https://github.com/datasette/datasette-embeddings/releases)\n[![Tests](https://github.com/datasette/datasette-embeddings/actions/workflows/test.yml/badge.svg)](https://github.com/datasette/datasette-embeddings/actions/workflows/test.yml)\n[![License](https://img.shields.io/badge/license-Apache%202.0-blue.svg)](https://github.com/datasette/datasette-embeddings/blob/main/LICENSE)\n\nStore and query embedding vectors in Datasette tables\n\n## Installation\n\nInstall this plugin in the same environment as Datasette.\n```bash\ndatasette install datasette-embeddings\n```\n## Usage\n\nAdds an [enrichment](https://enrichments.datasette.io/) for calculating and storing OpenAI embedding vectors for content in a table.\n\nUsers get to select the embedding model and the template (e.g. `{{ title }} {{ body }}`) for the columns they would like to embed.\n\nEmbeddings are stored as binary values in columns in a new table called `_embeddings_NAME`, where `NAME` is the name of the original source table.\n\nThe vectors are stored in columns that match the name of the embedding model, for example `emb_text_embedding_3_large_256` for the `text-embedding-3-large-256` model.\n\nIf you do not configure an OpenAI API key users will be asked for one any time they run the enrichment.\n\nYou can set an API key with plugin configuration like this:\n\n```yaml\nplugins:\n  datasette-embeddings:\n    api_key:\n      $env: OPENAI_API_KEY\n```\nThen set the `OPENAI_API_KEY` environment variable before you start Datasette.\n\nThis plugin adds a \"Semantic search against this table\" table action item for tables with embeddings, but only if the API key environment variable has been configured as the key is needed to calculate embeddings for the user's search query.\n\n## Development\n\nTo set up this plugin locally, first checkout the code. Then create a new virtual environment:\n```bash\ncd datasette-embeddings\npython3 -m venv venv\nsource venv/bin/activate\n```\nNow install the dependencies and test dependencies:\n```bash\npip install -e '.[test]'\n```\nTo run the tests:\n```bash\npytest\n```\nThe tests use captured examples of embedding APIs. The easiest way to re-generate these is to do the following:\n\n- `rm -rf tests/cassettes` to remove the previous recordings\n- `export OPENAPI_API_KEY='...'` to set an OpenAI API key\n- `pytest --record-mode once` to recreate the cassettes\n\n",
    "description_content_type": "text/markdown",
    "docs_url": null,
    "download_url": null,
    "downloads": {
      "last_day": -1,
      "last_month": -1,
      "last_week": -1
    },
    "dynamic": null,
    "home_page": null,
    "keywords": null,
    "license": "Apache-2.0",
    "maintainer": null,
    "maintainer_email": null,
    "name": "datasette-embeddings",
    "package_url": "https://pypi.org/project/datasette-embeddings/",
    "platform": null,
    "project_url": "https://pypi.org/project/datasette-embeddings/",
    "project_urls": {
      "CI": "https://github.com/datasette/datasette-embeddings/actions",
      "Changelog": "https://github.com/datasette/datasette-embeddings/releases",
      "Homepage": "https://github.com/datasette/datasette-embeddings",
      "Issues": "https://github.com/datasette/datasette-embeddings/issues"
    },
    "provides_extra": null,
    "release_url": "https://pypi.org/project/datasette-embeddings/0.1a3/",
    "requires_dist": [
      "datasette",
      "datasette-enrichments",
      "sqlite-utils",
      "httpx",
      "pytest; extra == \"test\"",
      "pytest-asyncio; extra == \"test\"",
      "pytest-recording; extra == \"test\"",
      "datasette-test; extra == \"test\""
    ],
    "requires_python": ">=3.8",
    "summary": "Store and query embedding vectors in Datasette tables",
    "version": "0.1a3",
    "yanked": false,
    "yanked_reason": null
  },
  "last_serial": 22660224,
  "releases": {
    "0.1a0": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "d24001686f8c1e06c5ddfd26b6f672490f1eada150625cb101c2f622148073e9",
          "md5": "0662b2e88ea7205ea2c76ac10ca16a36",
          "sha256": "b5b57d513b26339ce37a8a11278469e07e6d4801ebb36eefd48639974c795950"
        },
        "downloads": -1,
        "filename": "datasette_embeddings-0.1a0-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "0662b2e88ea7205ea2c76ac10ca16a36",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 8936,
        "upload_time": "2024-03-26T05:55:22",
        "upload_time_iso_8601": "2024-03-26T05:55:22.416917Z",
        "url": "https://files.pythonhosted.org/packages/d2/40/01686f8c1e06c5ddfd26b6f672490f1eada150625cb101c2f622148073e9/datasette_embeddings-0.1a0-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "cf241b1d9bf4a9c678d1ce7e7ad55b4bd4940519a4e70cdb2894fd83bdf1bc1c",
          "md5": "0ffe9c424d27bc891c790a73615a09df",
          "sha256": "879121be12c3655a97c5bdfd89fb997cd17fcc9fb9b1ea8c297789e1fb3a5b2f"
        },
        "downloads": -1,
        "filename": "datasette-embeddings-0.1a0.tar.gz",
        "has_sig": false,
        "md5_digest": "0ffe9c424d27bc891c790a73615a09df",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 13394,
        "upload_time": "2024-03-26T05:55:23",
        "upload_time_iso_8601": "2024-03-26T05:55:23.997236Z",
        "url": "https://files.pythonhosted.org/packages/cf/24/1b1d9bf4a9c678d1ce7e7ad55b4bd4940519a4e70cdb2894fd83bdf1bc1c/datasette-embeddings-0.1a0.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1a2": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "80d992fae237827edb6d70954ac15fb7f876241482661b695d3842b25953b59a",
          "md5": "cb8d1ce83f798b2dbac01fe7f98edef6",
          "sha256": "a7eb9fcb41545499c21227da585ab440b29075d97c9343cfed087a79f79b0bfe"
        },
        "downloads": -1,
        "filename": "datasette_embeddings-0.1a2-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "cb8d1ce83f798b2dbac01fe7f98edef6",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 10684,
        "upload_time": "2024-03-30T18:41:40",
        "upload_time_iso_8601": "2024-03-30T18:41:40.394471Z",
        "url": "https://files.pythonhosted.org/packages/80/d9/92fae237827edb6d70954ac15fb7f876241482661b695d3842b25953b59a/datasette_embeddings-0.1a2-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "3357e5fb319a86b8fe675baa6e9a265ad83ead1d141861e3bb44e147d1580370",
          "md5": "454cd4a1ba2c73890e80ff78c5f6484e",
          "sha256": "f151bb5ae367b4f99463301c39be188d22b11f0a1577e52d63f2584afaf6ee6e"
        },
        "downloads": -1,
        "filename": "datasette-embeddings-0.1a2.tar.gz",
        "has_sig": false,
        "md5_digest": "454cd4a1ba2c73890e80ff78c5f6484e",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 14944,
        "upload_time": "2024-03-30T18:41:41",
        "upload_time_iso_8601": "2024-03-30T18:41:41.341317Z",
        "url": "https://files.pythonhosted.org/packages/33/57/e5fb319a86b8fe675baa6e9a265ad83ead1d141861e3bb44e147d1580370/datasette-embeddings-0.1a2.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ],
    "0.1a3": [
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "1813ce89669790c0ce923001645fb0e7a3f6ca94413df427ed40ea5b6cd671fc",
          "md5": "258d577270d2ad27e2bddaf1b60418a3",
          "sha256": "016feffe56ffeb8908f8897e049436e80631a93a29acefa062e0d4029d7ec7ee"
        },
        "downloads": -1,
        "filename": "datasette_embeddings-0.1a3-py3-none-any.whl",
        "has_sig": false,
        "md5_digest": "258d577270d2ad27e2bddaf1b60418a3",
        "packagetype": "bdist_wheel",
        "python_version": "py3",
        "requires_python": ">=3.8",
        "size": 11259,
        "upload_time": "2024-04-08T00:07:50",
        "upload_time_iso_8601": "2024-04-08T00:07:50.143524Z",
        "url": "https://files.pythonhosted.org/packages/18/13/ce89669790c0ce923001645fb0e7a3f6ca94413df427ed40ea5b6cd671fc/datasette_embeddings-0.1a3-py3-none-any.whl",
        "yanked": false,
        "yanked_reason": null
      },
      {
        "comment_text": "",
        "digests": {
          "blake2b_256": "961ae54cffc0906915ca3a587c0d4db1860e2a08311753093259563dd6012095",
          "md5": "101a0fbbe8c8b2d4923d0cf62fd8057d",
          "sha256": "342fb1ffc3136e009794337f5c0fa4095a1d9201bf65e26a083428b91860c4f6"
        },
        "downloads": -1,
        "filename": "datasette-embeddings-0.1a3.tar.gz",
        "has_sig": false,
        "md5_digest": "101a0fbbe8c8b2d4923d0cf62fd8057d",
        "packagetype": "sdist",
        "python_version": "source",
        "requires_python": ">=3.8",
        "size": 12520,
        "upload_time": "2024-04-08T00:07:51",
        "upload_time_iso_8601": "2024-04-08T00:07:51.329611Z",
        "url": "https://files.pythonhosted.org/packages/96/1a/e54cffc0906915ca3a587c0d4db1860e2a08311753093259563dd6012095/datasette-embeddings-0.1a3.tar.gz",
        "yanked": false,
        "yanked_reason": null
      }
    ]
  },
  "urls": [
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "1813ce89669790c0ce923001645fb0e7a3f6ca94413df427ed40ea5b6cd671fc",
        "md5": "258d577270d2ad27e2bddaf1b60418a3",
        "sha256": "016feffe56ffeb8908f8897e049436e80631a93a29acefa062e0d4029d7ec7ee"
      },
      "downloads": -1,
      "filename": "datasette_embeddings-0.1a3-py3-none-any.whl",
      "has_sig": false,
      "md5_digest": "258d577270d2ad27e2bddaf1b60418a3",
      "packagetype": "bdist_wheel",
      "python_version": "py3",
      "requires_python": ">=3.8",
      "size": 11259,
      "upload_time": "2024-04-08T00:07:50",
      "upload_time_iso_8601": "2024-04-08T00:07:50.143524Z",
      "url": "https://files.pythonhosted.org/packages/18/13/ce89669790c0ce923001645fb0e7a3f6ca94413df427ed40ea5b6cd671fc/datasette_embeddings-0.1a3-py3-none-any.whl",
      "yanked": false,
      "yanked_reason": null
    },
    {
      "comment_text": "",
      "digests": {
        "blake2b_256": "961ae54cffc0906915ca3a587c0d4db1860e2a08311753093259563dd6012095",
        "md5": "101a0fbbe8c8b2d4923d0cf62fd8057d",
        "sha256": "342fb1ffc3136e009794337f5c0fa4095a1d9201bf65e26a083428b91860c4f6"
      },
      "downloads": -1,
      "filename": "datasette-embeddings-0.1a3.tar.gz",
      "has_sig": false,
      "md5_digest": "101a0fbbe8c8b2d4923d0cf62fd8057d",
      "packagetype": "sdist",
      "python_version": "source",
      "requires_python": ">=3.8",
      "size": 12520,
      "upload_time": "2024-04-08T00:07:51",
      "upload_time_iso_8601": "2024-04-08T00:07:51.329611Z",
      "url": "https://files.pythonhosted.org/packages/96/1a/e54cffc0906915ca3a587c0d4db1860e2a08311753093259563dd6012095/datasette-embeddings-0.1a3.tar.gz",
      "yanked": false,
      "yanked_reason": null
    }
  ],
  "vulnerabilities": []
}
